package com.global.language.web_content_translate.model.bo;

import com.global.language.web_content_translate.model.enity.Translation;
import java.io.Serializable;
import java.util.Date;

/**
 *   翻译表，用于存储网页内容的翻译信息
 *   表：translation
 *
 * @author lukenc
 * @date 2023年05月18日 10:46:52
 */
public class TranslationBo implements Serializable {
    /**
     *
     *  翻译条目的唯一标识符
     *
     * 数据库字段： translation.id
     *
     * @author lukenc
     */
    private Integer id;

    /**
     *
     *  对应网页内容表的主键，表示所属的网页内容的ID
     *
     * 数据库字段： translation.content_id
     *
     * @author lukenc
     */
    private Integer contentId;

    private String  content;

    private String contentType;

    private String contentUrl;

    /**
     *
     *  语言的ID，用于标识属于哪个语言
     *
     * 数据库字段： translation.language_id
     *
     * @author lukenc
     */
    private Integer languageId;

    /**
     *
     *  目标语言的标识符，如ISO语言代码
     *
     * 数据库字段： translation.language_code
     *
     * @author lukenc
     */
    private String languageCode;

    /**
     *
     *  创建人
     *
     * 数据库字段： translation.created_by
     *
     * @author lukenc
     */
    private String createdBy;

    /**
     *
     *  创建时间
     *
     * 数据库字段： translation.created_at
     *
     * @author lukenc
     */
    private Date createdAt;

    /**
     *
     *  最后修改人
     *
     * 数据库字段： translation.modified_by
     *
     * @author lukenc
     */
    private String modifiedBy;

    /**
     *
     *  最后修改时间
     *
     * 数据库字段： translation.modified_at
     *
     * @author lukenc
     */
    private Date modifiedAt;

    /**
     *
     * 数据库字段： translation.enable
     *
     * @author lukenc
     */
    private Boolean enable;

    /**
     *
     *  翻译后的文本内容
     *
     * 数据库字段： translation.translated_text
     *
     * @author lukenc
     */
    private String translatedText;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table translation
     *
     * @author lukenc
     */
    private static final long serialVersionUID = 1L;

    public TranslationBo() {
        super();
    }
    public static TranslationBo fromCombine(Translation translation, WebContentBo webContentBo) {
        TranslationBo bo=new TranslationBo();
        if (translation!=null) {
            bo.id = translation.getId();
            bo.languageCode = translation.getLanguageCode();
            bo.languageId = translation.getLanguageId();
            bo.createdAt = translation.getCreatedAt();
            bo.createdBy = translation.getCreatedBy();
            bo.modifiedAt = translation.getModifiedAt();
            bo.modifiedBy = translation.getModifiedBy();
            bo.contentId = translation.getContentId();
            bo.translatedText = translation.getTranslatedText();
        }
       if (webContentBo!=null) {
           bo.content = webContentBo.getOriginalContent();
           bo.contentType = webContentBo.getType();
           bo.contentUrl = webContentBo.getUrl();
       }
       return bo;
    }

    /**
     * 获取translation.id
     *
     * @return the value of translation.id
     *
     * @author lukenc
     */
    public Integer getId() {
        return id;
    }

    /**
     * 设置translation.id
     *
     * @param id the value for translation.id
     *
     * @author lukenc
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * 获取translation.content_id
     *
     * @return the value of translation.content_id
     *
     * @author lukenc
     */
    public Integer getContentId() {
        return contentId;
    }

    /**
     * 设置translation.content_id
     *
     * @param contentId the value for translation.content_id
     *
     * @author lukenc
     */
    public void setContentId(Integer contentId) {
        this.contentId = contentId;
    }

    /**
     * 获取translation.language_id
     *
     * @return the value of translation.language_id
     *
     * @author lukenc
     */
    public Integer getLanguageId() {
        return languageId;
    }

    /**
     * 设置translation.language_id
     *
     * @param languageId the value for translation.language_id
     *
     * @author lukenc
     */
    public void setLanguageId(Integer languageId) {
        this.languageId = languageId;
    }

    /**
     * 获取translation.language_code
     *
     * @return the value of translation.language_code
     *
     * @author lukenc
     */
    public String getLanguageCode() {
        return languageCode;
    }

    /**
     * 设置translation.language_code
     *
     * @param languageCode the value for translation.language_code
     *
     * @author lukenc
     */
    public void setLanguageCode(String languageCode) {
        this.languageCode = languageCode == null ? null : languageCode.trim();
    }

    /**
     * 获取translation.created_by
     *
     * @return the value of translation.created_by
     *
     * @author lukenc
     */
    public String getCreatedBy() {
        return createdBy;
    }

    /**
     * 设置translation.created_by
     *
     * @param createdBy the value for translation.created_by
     *
     * @author lukenc
     */
    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy == null ? null : createdBy.trim();
    }

    /**
     * 获取translation.created_at
     *
     * @return the value of translation.created_at
     *
     * @author lukenc
     */
    public Date getCreatedAt() {
        return createdAt;
    }

    /**
     * 设置translation.created_at
     *
     * @param createdAt the value for translation.created_at
     *
     * @author lukenc
     */
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * 获取translation.modified_by
     *
     * @return the value of translation.modified_by
     *
     * @author lukenc
     */
    public String getModifiedBy() {
        return modifiedBy;
    }

    /**
     * 设置translation.modified_by
     *
     * @param modifiedBy the value for translation.modified_by
     *
     * @author lukenc
     */
    public void setModifiedBy(String modifiedBy) {
        this.modifiedBy = modifiedBy == null ? null : modifiedBy.trim();
    }

    /**
     * 获取translation.modified_at
     *
     * @return the value of translation.modified_at
     *
     * @author lukenc
     */
    public Date getModifiedAt() {
        return modifiedAt;
    }

    /**
     * 设置translation.modified_at
     *
     * @param modifiedAt the value for translation.modified_at
     *
     * @author lukenc
     */
    public void setModifiedAt(Date modifiedAt) {
        this.modifiedAt = modifiedAt;
    }

    /**
     * 获取translation.enable
     *
     * @return the value of translation.enable
     *
     * @author lukenc
     */
    public Boolean getEnable() {
        return enable;
    }

    /**
     * 设置translation.enable
     *
     * @param enable the value for translation.enable
     *
     * @author lukenc
     */
    public void setEnable(Boolean enable) {
        this.enable = enable;
    }

    /**
     * 获取translation.translated_text
     *
     * @return the value of translation.translated_text
     *
     * @author lukenc
     */
    public String getTranslatedText() {
        return translatedText;
    }

    /**
     * 设置translation.translated_text
     *
     * @param translatedText the value for translation.translated_text
     *
     * @author lukenc
     */
    public void setTranslatedText(String translatedText) {
        this.translatedText = translatedText == null ? null : translatedText.trim();
    }

    /**
     *
     * 转字符
     *
     * @return String
     *
     * @author lukenc
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", contentId=").append(contentId);
        sb.append(", languageId=").append(languageId);
        sb.append(", languageCode=").append(languageCode);
        sb.append(", createdBy=").append(createdBy);
        sb.append(", createdAt=").append(createdAt);
        sb.append(", modifiedBy=").append(modifiedBy);
        sb.append(", modifiedAt=").append(modifiedAt);
        sb.append(", enable=").append(enable);
        sb.append(", translatedText=").append(translatedText);
        sb.append(", serialVersionUID=").append(serialVersionUID);
        sb.append("]");
        return sb.toString();
    }

    public static TranslationBo create(String languageCode, Integer languageId, Integer contentId, String translatedText){
        TranslationBo translation=new TranslationBo();
        translation.languageCode=languageCode;
        translation.languageId=languageId;
        translation.contentId=contentId;
        translation.translatedText=translatedText ;
        return translation;
    }

    public String getContent() {
        return content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public String getContentType() {
        return contentType;
    }

    public void setContentType(String contentType) {
        this.contentType = contentType;
    }

    public String getContentUrl() {
        return contentUrl;
    }

    public void setContentUrl(String contentUrl) {
        this.contentUrl = contentUrl;
    }
}